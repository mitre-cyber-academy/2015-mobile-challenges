#!/bin/bash

#DEMO

#TODO's
#@change app name so each team has respective app name on device

#Inputs
#1 = team number/name
#2 = round number
#3 = port 

cd SherLocked/app
sed_string="s/org.mitre.ctf.sherlocked/org.mitre.ctf.sherlocked.team$1/g"
mv build.gradle build.gradle.old
sed $sed_string build.gradle.old > build.gradle
rm -r build.gradle.old
#debug
cat build.gradle
#
#build app - options: assemble, assembleDebug, assembleRelease
# Create Unsigned APK app/build/outputs/apk/app-release-unsigned.apk
cd ..
./gradlew assembleRelease 
#DEBUG
#adb install app/build/outputs/apk/app-debug.apk
#
#reset the gradle for next run
cd app
sed_string="s/org.mitre.ctf.sherlocked.team$1/org.mitre.ctf.sherlocked/g"
mv build.gradle build.gradle.old
sed $sed_string build.gradle.old > build.gradle
rm -r build.gradle.old
cd ..

#TODO
#Create key, sign unsigned apk, align, copy apk and install
#Do we want to install the apk's to the emulators then let them download? 

cd app
#create key
yes | keytool -genkey -v -keystore $1-$2-keystore.keystore -alias team$1 -keyalg RSA -keysize 2048 -validity 10000 -keypass $2 -storepass $2

#sign APK with key
mv build/outputs/apk/app-release-unsigned.apk ./team$1SherLocked-signed.apk

echo $2 | jarsigner -verbose -sigalg SHA1withRSA -digestalg SHA1 -keystore $1-$2-keystore.keystore ./team$1SherLocked-signed.apk team$1

#align
zipalign -v 4 ./team$1SherLocked-signed.apk ./team$1SherLocked.apk

#copy apk to main player package
#cp bin/team$1CTwitterF.apk ../team$1CTwitterF.apk